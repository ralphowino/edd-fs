{"version":3,"file":null,"sources":["../components/writer.js","../components/reader.js","../components/loader.js","../../edd-io/components/inquirer.js","../../edd-io/components/transformers.js","../../edd-io/components/fields.js","../../edd-io/components/input.js","../../edd-io/components/output.js","../components/manager.js","../components/filesystem.js","../commands/init.js","../components/copy.js","../commands/read.js","../commands/write.js","../index.js"],"sourcesContent":["var\r\n    _ = require('lodash'),\r\n    q = require('q'),\r\n    inquirer = require('inquirer'),\r\n    path = require('path'),\r\n    fs = require('fs-plus');\r\n\r\nclass ClassWriter {\r\n\r\n    writeFile(file_path, content) {\r\n        var defered = q.defer();\r\n        var dir = path.dirname(file_path);\r\n        if (!fs.existsSync(dir)) {\r\n            fs.makeTreeSync(dir);\r\n        }\r\n\r\n        if (_.isObject(content) || _.isArray(content)) {\r\n            content = JSON.stringify(content)\r\n        }\r\n        fs.writeFile(file_path, content, function (err) {\r\n            if (err) {\r\n                return defered.reject(new Error(err));\r\n            }\r\n            defered.fulfill(file_path);\r\n        });\r\n        return defered.promise;\r\n    }\r\n\r\n    askToOverwrite() {\r\n        var question = {\r\n            type: \"confirm\",\r\n            name: \"overwrite\",\r\n            message: \"The file already exists, do you want to overwrite it?\",\r\n            default: false\r\n        };\r\n        return inquirer.prompt([question]);\r\n    };\r\n\r\n    write(path, content) {\r\n        if (!fs.existsSync(path)) {\r\n            return this.writeFile(path, content);\r\n        }\r\n\r\n        return this.askToOverwrite().then(function (response) {\r\n            if (response.overwrite) {\r\n                return this.writeFile(path, content);\r\n            }\r\n            return q.reject('File already exists');\r\n        });\r\n    }\r\n\r\n    mkdir(path) {\r\n        var deferred = q.defer();\r\n        fs.makeTree(path, function (err) {\r\n            if (err) {\r\n                return deferred.reject(err);\r\n            }\r\n            return deferred.fulfill();\r\n        });\r\n        return deferred.promise;\r\n    }\r\n}\r\nexport let Writer = new ClassWriter();","let fs = require('fs-plus'),\r\n    path = require('path'),\r\n    q = require('q'),\r\n    yaml = require('js-yaml'),\r\n    _ = require('lodash');\r\n\r\nclass ClassReader {\r\n\r\n  constructor() {\r\n    this.types = {\r\n      json: {\r\n        extensions: ['json'],\r\n        parser: 'parseJson'\r\n      },\r\n      yaml: {\r\n        extensions: ['yaml', 'yml'],\r\n        parser: 'parseYaml'\r\n      }\r\n    };\r\n  }\r\n\r\n  resolveFileType(fileName) {\r\n    let ext = path.extname(fileName).substr(1);\r\n    let type = _.findIndex(this.types, (type)=> {\r\n      return _.findIndex(type.extensions, ext) != -1;\r\n    });\r\n    return type != -1 ? type : ext;\r\n  }\r\n\r\n  parseYaml(data) {\r\n    return yaml.load(data);\r\n  }\r\n\r\n  parseJson(data) {\r\n    return JSON.parse(data);\r\n  }\r\n\r\n  read(path) {\r\n    let type = this.resolveFileType(path);\r\n    let defered = q.defer();\r\n    fs.readFile(path, (err, content) => {\r\n      let data = content.toString();\r\n      if (err) {\r\n        return defered.reject(new Error(err));\r\n      }\r\n      if (this.types[type]['parser']) {\r\n        return defered.resolve(this[this.types[type]['parser']](data));\r\n      }\r\n      return defered.resolve(data);\r\n    });\r\n    return defered.promise;\r\n  }\r\n\r\n  readSync(path) {\r\n    let type = this.resolveFileType(path);\r\n    let data = fs.readFileSync(path);\r\n    data = data.toString();\r\n    if (_.has(this.types, [type, 'parser'])) {\r\n      this[_.get(this.types, [type, 'parser'])](data);\r\n    }\r\n    return data;\r\n  }\r\n}\r\nexport let Reader = new ClassReader();","var q = require('q');\r\nvar _ = require('lodash');\r\nvar fs = require('fs-plus');\r\n\r\nimport {Reader} from './reader';\r\n\r\nclass ClassLoader {\r\n    constructor() {\r\n        this.types = ['json', 'yaml', 'yml'];\r\n        this.globalFolder = fs.getHomeDirectory() + '/.edd/';\r\n    }\r\n\r\n    /**\r\n     * Load a file given the file's path\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    loadFile(path) {\r\n        return this.getRealPath(path).then((response)=> {\r\n            return this.readFile(response.path).then((content)=> {\r\n                response.content = content;\r\n                return response\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load a file given the file's path\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    loadFileSync(path) {\r\n        return this.getRealPath(path).then((response)=> {\r\n            return this.readFile(response.path).then((content)=> {\r\n                response.content = content;\r\n                return response\r\n            });\r\n        });\r\n    }\r\n\r\n    readFile(path) {\r\n        if (fs.existsSync(path)) {\r\n            return Reader.read(path);\r\n        }\r\n        return q.reject(new Error('File does not exist'));\r\n    }\r\n\r\n    /**\r\n     * Get the real path to the file specified\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    getRealPath(path) {\r\n        // Check if path is absolute and return the absolute path\r\n        if (fs.isAbsolute(path)) {\r\n            return q.resolve({\r\n                type: 'absolute',\r\n                path: path\r\n            });\r\n        }\r\n\r\n        // Check and if exists return the local path\r\n        let localFolder = this.getLocalFolder();\r\n\r\n        if (localFolder) {\r\n            let localFilePath = this.fileExists(localFolder + '/' + path, this.types);\r\n\r\n            if (localFilePath) {\r\n                return q.resolve({\r\n                    type: 'local',\r\n                    path: fs.absolute(localFilePath)\r\n                });\r\n            }\r\n        }\r\n\r\n        let globalFilePath = this.fileExists(this.globalFolder + '/' + path, this.types);\r\n\r\n        if (globalFilePath) {\r\n            return q.resolve({\r\n                type: 'local',\r\n                path: globalFilePath\r\n            });\r\n        }\r\n\r\n        return q.reject(new Error('File not found'));\r\n    }\r\n\r\n    /**\r\n     * Check if file exists and returns the path\r\n     *\r\n     * @param path\r\n     * @param possibleExtensions\r\n     * @returns {*}\r\n     */\r\n    fileExists(path, possibleExtensions) {\r\n        if (fs.existsSync(path)) {\r\n            return path;\r\n        }\r\n\r\n        if (!_.isUndefined(possibleExtensions)) {\r\n            for (var i = 0; i < possibleExtensions.length; i++) {\r\n                if (this.fileExists(path + '.' + possibleExtensions[i])) {\r\n                    return path + '.' + possibleExtensions[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get the local .edd folder\r\n     *\r\n     * @param targetFile\r\n     * @param startingPoint\r\n     * @param levels\r\n     * @returns {*}\r\n     */\r\n    getLocalFolder(targetFile, startingPoint, levels) {\r\n        if (!targetFile) {\r\n            targetFile = '.edd'\r\n        }\r\n\r\n        if (!startingPoint) {\r\n            startingPoint = './';\r\n        }\r\n\r\n        if (!levels) {\r\n            levels = fs.absolute(startingPoint).split('/').length;\r\n\r\n            //Checks if a windows machines\r\n            if (levels == 1) {\r\n                levels = fs.absolute(startingPoint).split('\\\\').length;\r\n            }\r\n        }\r\n\r\n        if (fs.existsSync((startingPoint + '/' + targetFile))) {\r\n            return (startingPoint + '/' + targetFile).replace('//', '/');\r\n        }\r\n\r\n        if ((levels - 1) != 0) {\r\n            return this.getLocalFolder(targetFile, startingPoint + '../', (levels - 1));\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport let Loader = new ClassLoader();\r\n\r\n","var inquirer = require('inquirer');\r\n\r\nclass ClassInquirer {\r\n    loopQuestions(questions_array, index, answers) {\r\n        if (!index) {\r\n            index = 0;\r\n        }\r\n\r\n        if (!answers) {\r\n            answers = {}\r\n        }\r\n\r\n        return inquirer.prompt(questions_array[index]).then(function (answer) {\r\n            Object.assign(answers, answer);\r\n\r\n            if (index === questions_array.length - 1) {\r\n                return answers;\r\n            } else {\r\n                return this.loopQuestions(questions_array, index + 1, answers)\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Modified version of inquirer prompt function\r\n     * @param questions_array\r\n     * @returns {Promise<T>|Promise}\r\n     */\r\n    prompt(questions_array) {\r\n        return new Promise(function (resolve) {\r\n            return resolve(this.loopQuestions(questions_array));\r\n        });\r\n    }\r\n}\r\nexport let Inquirer = new ClassInquirer();","var _ = require('lodash');\r\n\r\nclass ClassTransformers {\r\n\r\n    transformArrayField(field) {\r\n        // return input.choose(field.title + '. What do we do next', [\r\n        // \t{\tvalue: 'add',  name: 'Add'},\r\n        // \t{\tvalue: 'stop', name: 'Stop'}\r\n        // ]).then(function ( selected ) {\r\n        // \tif (selected == 'stop')\r\n        // \t\treturn answers;\r\n        // \tvar items = _.map(field.items, function (item) {\r\n        // \t\treturn item.replace(field.key.concat('[].'), '');\r\n        // \t});\r\n        // \treturn input.fields(field.schema.items, items).then(function (answer) {\r\n        // \t\tanswers.push(answer);\r\n        // \t\treturn input.askArrayQuestion(field, answers)\r\n        // \t})\r\n        // });\r\n    }\r\n\r\n    transformBooleanField(field) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'confirm'\r\n        }\r\n    }\r\n\r\n// transformCheckboxField(field) {\r\n// \treturn {\r\n// \t\tname: field.key,\r\n// \t\tmessage: field.title ? field.title : field.key,\r\n// \t\tchoices: choices,\r\n// \t\tdefault: _default\r\n// \t}\r\n// }\r\n\r\n    transformDefaultField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer\r\n        }\r\n    }\r\n\r\n    transformHelpField(field, answer) {\r\n        console.log('no transform available for help text');\r\n        return null;\r\n    }\r\n\r\n    transformIntegerField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer //TODO add validate function\r\n        }\r\n    }\r\n\r\n    transformNumberField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer //TODO add validate function\r\n        }\r\n    }\r\n\r\n    transformStringField(field, answer) {\r\n        var question = transformers.transformDefaultField(field, answer);\r\n\r\n        if (field.enum) {\r\n            var choices = _.map(field.enum, function (item) {\r\n                return {value: item, name: item};\r\n            });\r\n            question.type = 'rawlist';\r\n            question.choices = choices;\r\n        }\r\n        return question;\r\n    }\r\n\r\n    transformSubmitField(field, answer) {\r\n        console.log('no transform available for submit buttons');\r\n        return null;\r\n    }\r\n\r\n    transformTextareaField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer\r\n        }\r\n    }\r\n}\r\nexport let Transformers = new ClassTransformers();","var _ = require('lodash');\r\n\r\nimport {Inquirer} from './inquirer';\r\nimport {Transformers} from './transformers';\r\n\r\nclass ClassFields {\r\n    askQuestions(form, default_model) {\r\n        var questions = this.getQuestions(form, default_model);\r\n        return Inquirer.prompt(questions);\r\n    }\r\n\r\n    getArrayFields(schema, parent_field) {\r\n        var array_form = [];\r\n        var array_schema = _.cloneDeep(_.get(schema, ['properties', parent_field.key]));\r\n        _.forEach(parent_field.items, function (item_field) {\r\n            if (_.isString(item_field)) {\r\n                item_field = {key: item_field};\r\n            }\r\n            item_field.key = item_field.key.replace(parent_field.key + '[].', ''); // Remove the array key prefix\r\n            array_form.push(this.getNormalField(array_schema, item_field))\r\n        });\r\n        return array_form;\r\n    }\r\n\r\n    getAsteriskFields(schema, schema_form) {\r\n        var fields = _.cloneDeep(_.get(schema, ['properties']));\r\n        _.forEach(fields, function (object, field) {\r\n            field = {key: field};\r\n            schema_form.push(this.getNormalField(schema, field));\r\n        });\r\n        return schema_form;\r\n    }\r\n\r\n    getNormalField(schema, field) {\r\n        var field_schema = _.cloneDeep(_.get(schema, ['properties', field.key]));\r\n        if (_.isUndefined(field_schema))\r\n            field_schema = _.cloneDeep(_.get(schema.items, ['properties', field.key])); //check for array\r\n\r\n        field = _.merge(field_schema, _.get(field, ['schema', 'x-schema-form'], {}), field);\r\n\r\n        if (field.type === 'array') {\r\n            field = this.getArrayFields(schema, field); // Make the field an array of the objects properties\r\n        }\r\n\r\n        return field;\r\n    }\r\n\r\n    getQuestions(array_fields, default_model) {\r\n        var type, questions = [];\r\n        _.forEach(array_fields, function (field) {\r\n            \"use strict\";\r\n            var question;\r\n\r\n            if (_.isArray(field)) {\r\n                question = this.getQuestions(field, default_model);\r\n            } else {\r\n                type = 'transform' + _.capitalize(field.type) + 'Field';\r\n                if (!Transformers[type]) {\r\n                    console.error(type);\r\n                    type = 'transformDefaultField';\r\n                }\r\n                question = Transformers[type](field, _.get(default_model, field.key));\r\n            }\r\n\r\n            if (question != null) {\r\n                return questions.push(question);\r\n            }\r\n        });\r\n        return questions;\r\n    }\r\n\r\n    queries(schema, form, model) {\r\n        var schema_form = [];\r\n\r\n        _.forEach(form, function (field) {\r\n            if (_.isString(field)) {\r\n                field = {key: field};\r\n            }\r\n\r\n            if (field.key !== '*') { // normal fields\r\n                schema_form.push(this.getNormalField(schema, field));\r\n            } else if (field.key === '*') { // dynamic form indicated by asterisk to indicate all fields\r\n                this.getAsteriskFields(schema, schema_form);\r\n            }\r\n        });\r\n        return this.askQuestions(schema_form, model)\r\n    }\r\n}\r\nexport let Fields = new ClassFields();","var inquirer = require('inquirer');\r\n\r\nclass ClassInput {\r\n    ask(message, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'input',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    secret(message, _default) {\r\n        console.log(message);\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'password',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    confirm(message, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'confirm',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    choose(message, choices, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'list',\r\n            choices: choices,\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    choice(question, choices, selected) {\r\n        \"use strict\";\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: question,\r\n            type: 'list',\r\n            choices: choices,\r\n            default: selected\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n}\r\nexport let Input = new ClassInput();","var\r\n  chalk = require('chalk'),\r\n  Spinner = require('cli-spinner').Spinner,\r\n  _ = require('lodash');\r\n\r\nclass ClassOutput {\r\n  line() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.log(message);\r\n    });\r\n  }\r\n\r\n  info() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.info(chalk.cyan(message));\r\n    });\r\n  }\r\n\r\n  success() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.info(chalk.green(message));\r\n    });\r\n  }\r\n\r\n  error() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.error(chalk.white.bgRed(message));\r\n    });\r\n  }\r\n\r\n  warning() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.warn(chalk.yellow(message));\r\n    })\r\n  }\r\n\r\n  spinner(message) {\r\n    let spinner = new Spinner(message + '...%s');\r\n    spinner.setSpinnerString('|/-\\\\');\r\n    return spinner;\r\n  }\r\n}\r\nexport let Output = new ClassOutput();","var q = require('q');\r\n\r\nimport {Output} from '../../edd-io/index';\r\nimport {Writer} from './writer';\r\n\r\nclass ClassManager {\r\n    constructor() {\r\n        this.basePath = process.cwd() + '/';\r\n        this.eddiePath = this.basePath.concat('.edd/');\r\n        this.eddieFile = this.eddiePath.concat('edd-config.json');\r\n    }\r\n\r\n    init() {\r\n        Output.info('initializing');\r\n        var config = {version: '0.0.1'};\r\n\r\n        return Writer\r\n            .write(this.eddieFile, JSON.stringify(config))\r\n            .then((file)=> {\r\n                    let process = [];\r\n                    Output.success('edd successfully initialized at' + file);\r\n\r\n                    process.push(Writer.mkdir(this.eddiePath.concat('libraries')).then(()=> {\r\n                        Output.success('Created libraries folder')\r\n                    }, ()=> {\r\n                        console.log(arguments)\r\n                    }));\r\n                    process.push(Writer.mkdir(this.eddiePath.concat('templates')));\r\n\r\n                    return q.all(process);\r\n                },\r\n                (err) => {\r\n                    Output.error(err);\r\n                });\r\n    }\r\n}\r\nexport let Manager = new ClassManager();","var q = require('q');\r\nvar fs = require('fs-plus');\r\nimport {Reader} from './reader';\r\nimport {Writer} from './writer';\r\n\r\nclass ClassFileSystem {\r\n\r\n    constructor() {\r\n        this.globalFolder = fs.getHomeDirectory() + '/.edd/';\r\n    }\r\n\r\n    /**\r\n     * Checks for the file and reads the content of the file if the file is present\r\n     *\r\n     * @param path\r\n     * @param content\r\n     * @returns {*}\r\n     */\r\n    writeToLocalFile(path, content) {\r\n        var deferred = q.defer();\r\n\r\n        Writer.write(this.getLocalFolder() + '/' + path, content).then( () => {\r\n            return deferred.resolve('Successfully wrote to the file');\r\n        },  (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Checks for the file and reads the content of the file if the file is present\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    readFile(path) {\r\n        var deferred = q.defer();\r\n\r\n        fs.exists(path, () => {\r\n            Reader.read(path).then( (response) => {\r\n                return deferred.resolve(response);\r\n            },  (err) => {\r\n                return deferred.reject(err);\r\n            });\r\n        }, () => {\r\n            return deferred.reject(new Error('File does not exist'));\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * Recursively searches up the file system for a file\r\n     *\r\n     * @param targetFile\r\n     * @param startingPoint\r\n     * @param levels\r\n     * @returns {*} relativeFilePath\r\n     */\r\n    getLocalFolder(targetFile, startingPoint, levels) {\r\n\r\n        if(!targetFile) {\r\n            targetFile = '.edd';\r\n        }\r\n\r\n        if(!startingPoint) {\r\n            startingPoint = './';\r\n        }\r\n\r\n        if(!levels) {\r\n            levels = FileSystem.fetchDirectoryLevels(startingPoint);\r\n        }\r\n\r\n        if (fs.existsSync((startingPoint + '/' + targetFile))) {\r\n            return (startingPoint + '/' + targetFile).replace('//', '/');\r\n        }\r\n\r\n        if ((levels - 1) != 0) {\r\n            return this.getLocalFolder(targetFile, startingPoint + '../', (levels - 1));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Fetches the levels the current directory is compared to the base directory\r\n     *\r\n     * @param {String} startingPoint\r\n     * @returns {Number} directoryLevels\r\n     */\r\n    static fetchDirectoryLevels(startingPoint) {\r\n        let absolute = fs.absolute(startingPoint);\r\n        let levels = absolute.split('/').length;\r\n\r\n        //Checks if a windows machines\r\n        if (levels == 1) {\r\n            levels = absolute.split('\\\\').length;\r\n        }\r\n\r\n        return levels;\r\n    }\r\n\r\n    /**\r\n     * Checks if the local .edd folder exists\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    localDirectoryExists() {\r\n        return Boolean(this.getLocalFolder());\r\n    }\r\n\r\n\r\n    /**\r\n     * Reads a file from the local .edd folder\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    readLocalFile(path) {\r\n        return this.readFile(this.getLocalFolder() + '/' + path);\r\n    }\r\n\r\n    /**\r\n     * Reads a file from the global .edd folder\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    readGlobalFile(path) {\r\n        return this.readFile(this.globalFolder + path);\r\n    }\r\n\r\n    /**\r\n     * Build up the response object\r\n     *\r\n     * @param source\r\n     * @param path\r\n     * @param content\r\n     * @returns {{source: *, path: *, content: *}}\r\n     */\r\n    buildResponse(source, path, content) {\r\n        return {\r\n            'source': source,\r\n            'path': path,\r\n            'content': content\r\n        }\r\n    }\r\n}\r\nexport let FileSystem = new ClassFileSystem();","var program = require('commander'),\r\n    q = require('q'),\r\n    fs = require('fs-plus');\r\n\r\nimport {Input} from '../../edd-io/index';\r\nimport {Manager} from '../components/manager';\r\n\r\nclass ClassCommandInit {\r\n    init() {\r\n        program\r\n            .command('init')\r\n            .description('Initialize a new edd instance')\r\n            .option('-f, --force', 'Force re-initialization if already existing')\r\n            .action(this.handle);\r\n    }\r\n\r\n    handle() {\r\n        var overwrite = program.force;\r\n        if (fs.existsSync(Manager.eddiePath)) {\r\n            overwrite = Input.confirm('edd is already initialized, do you want to re-initialize it', false);\r\n            q.resolve(overwrite).then(function (force) {\r\n                if (force) {\r\n                    Manager.init(force);\r\n                }\r\n            });\r\n        } else {\r\n            Manager.init();\r\n        }\r\n    }\r\n}\r\n\r\nexport let CommandInit = new ClassCommandInit();","var q = require('q');\r\nvar fs = require('fs-plus');\r\n\r\nimport {FileSystem} from './filesystem';\r\n\r\nclass ClassCopier {\r\n    /**\r\n     * Checks if a local version of the file exists and returns the file's contents\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    checkLocalVersion(path) {\r\n        let deferred = q.defer();\r\n\r\n        FileSystem.readLocalFile(path).then((fileContent) => {\r\n            return deferred.resolve(FileSystem.buildResponse('local', path, fileContent))\r\n        }, (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetch a global version of the file being seeked\r\n     *\r\n     * @param path\r\n     * @returns {*}\r\n     */\r\n    fetchGlobalVersion(path) {\r\n        let deferred = q.defer();\r\n\r\n        file.readGlobalFile(path).then((fileContent) => {\r\n            return deferred.resolve(fileContent);\r\n        }, (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Creates a local version of the file\r\n     *\r\n     * @param path\r\n     * @param content\r\n     * @returns {*}\r\n     */\r\n    createLocalVersion(path, content) {\r\n        let deferred = q.defer();\r\n\r\n        file.writeToLocalFile(path, content).then(() => {\r\n            return deferred.resolve(file.buildResponse('local', path, content));\r\n        }, (err) => {\r\n            return deferred.reject(err);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Loads the file in the specified path from the closest .edd folder\r\n     *\r\n     * @param path\r\n     * @returns {Promise}\r\n     */\r\n    copyFile(path) {\r\n        let deferred = q.defer();\r\n\r\n        if (!file.localDirectoryExists()) {\r\n            return deferred.reject(new Error('Local .edd folder does not exist.'));\r\n        }\r\n\r\n        this.checkLocalVersion(path).then((response) => {\r\n            return deferred.resolve(response);\r\n        }, (err) => {\r\n            this.fetchGlobalVersion(path).then((content) => {\r\n                this.createLocalVersion(path, content).then((response) => {\r\n                    return deferred.resolve(response);\r\n                }, (err) => {\r\n                    return deferred.reject(err);\r\n                })\r\n            }, (err) => {\r\n                return deferred.reject(err);\r\n            });\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n}\r\nexport  let Copier = new ClassCopier();","var program = require('commander');\r\n\r\nimport {Copier} from '../components/copy';\r\nimport {Loader} from '../components/loader';\r\n\r\nclass ClassCommandRead {\r\n    init() {\r\n        program\r\n            .command('read')\r\n            .description('Reads a json or yaml file and dumps its contents on the console')\r\n            .arguments('<path>', \"The path of the file to read\")\r\n            .action(this.handle)\r\n            .parse(process.argv);\r\n    }\r\n\r\n    handle(path) {\r\n        //\r\n        // if (path == undefined) {\r\n        //   throw new Error('Required argument `path` not provided');\r\n        // }\r\n        //\r\n        // if (!fs.isFileSync(path)) {\r\n        //   console.error('ERROR: Argument `path` is not a valid file path');\r\n        //   process.exit(1);\r\n        // }\r\n        //\r\n        console.log(path);\r\n        Loader.loadFile(path).then(function (response) {\r\n            console.log(response);\r\n        }, function (err) {\r\n            console.log(err);\r\n        });\r\n        // Copier.copyFile(path).then(function (response) {\r\n        //   console.log(response);\r\n        // }, function (err) {\r\n        //   console.log(err)\r\n        // });\r\n    }\r\n}\r\n\r\nexport let CommandRead = new ClassCommandRead();","var program = require('commander'),\r\n    q = require('q'),\r\n    fs = require('fs-plus');\r\n\r\nimport {Writer} from '../components/writer';\r\n\r\nclass ClassCommandWrite {\r\n    init() {\r\n        program\r\n            .command('write')\r\n            .description('Writes data to a specified file')\r\n            .arguments('<path> <data>', \"The path of the file to write\", \"Data to write\")\r\n            .action(this.handle)\r\n            .parse(process.argv);\r\n    }\r\n\r\n    handle(path, content) {\r\n        if (path == undefined) {\r\n            throw new Error('Required argument `path` not provided');\r\n        }\r\n\r\n        if (content == undefined) {\r\n            throw new Error('Required argument `data` not provided');\r\n        }\r\n\r\n        Writer.write(path, content)\r\n            .then(function () {\r\n                console.log('Files written successfully');\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err ? err : '');\r\n            });\r\n    }\r\n}\r\nexport let CommandWrite = new ClassCommandWrite();\r\n\r\n\r\n","export {Writer} from './components/writer';\r\nexport {Loader} from './components/loader';\r\nexport {Reader} from './components/reader';\r\nexport {Manager} from './components/manager';\r\nexport {FileSystem} from './components/filesystem';\r\n\r\nimport {CommandInit} from './commands/init';\r\nimport {CommandRead} from './commands/read';\r\nimport {CommandWrite} from './commands/write';\r\n\r\nexport function init() {\r\n  CommandInit.init();\r\n  CommandRead.init();\r\n  CommandWrite.init();\r\n}\r\n\r\n\r\n"],"names":["_","require","q","inquirer","path","fs","ClassWriter","file_path","content","defered","defer","dir","dirname","existsSync","makeTreeSync","isObject","isArray","JSON","stringify","writeFile","err","reject","Error","fulfill","promise","question","prompt","askToOverwrite","then","response","overwrite","deferred","makeTree","Writer","yaml","ClassReader","types","fileName","ext","extname","substr","type","findIndex","extensions","data","load","parse","resolveFileType","readFile","toString","resolve","readFileSync","has","get","Reader","ClassLoader","globalFolder","getHomeDirectory","getRealPath","read","isAbsolute","localFolder","getLocalFolder","localFilePath","fileExists","absolute","globalFilePath","possibleExtensions","isUndefined","i","length","targetFile","startingPoint","levels","split","replace","Loader","ClassInquirer","questions_array","index","answers","answer","assign","loopQuestions","Promise","Inquirer","ClassTransformers","field","key","title","default","log","transformers","transformDefaultField","enum","choices","map","item","value","name","Transformers","ClassFields","form","default_model","questions","getQuestions","schema","parent_field","array_form","array_schema","cloneDeep","forEach","items","item_field","isString","push","getNormalField","schema_form","fields","object","field_schema","merge","getArrayFields","array_fields","capitalize","error","model","getAsteriskFields","askQuestions","Fields","ClassInput","message","_default","selected","Input","chalk","Spinner","ClassOutput","each","arguments","info","cyan","green","white","bgRed","warn","yellow","spinner","setSpinnerString","Output","ClassManager","basePath","process","cwd","eddiePath","concat","eddieFile","config","version","write","file","success","mkdir","all","Manager","ClassFileSystem","exists","FileSystem","fetchDirectoryLevels","Boolean","source","program","ClassCommandInit","command","description","option","action","handle","force","confirm","init","CommandInit","ClassCopier","readLocalFile","fileContent","buildResponse","readGlobalFile","writeToLocalFile","localDirectoryExists","checkLocalVersion","fetchGlobalVersion","createLocalVersion","Copier","ClassCommandRead","argv","loadFile","CommandRead","ClassCommandWrite","undefined","catch","CommandWrite"],"mappings":"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"}